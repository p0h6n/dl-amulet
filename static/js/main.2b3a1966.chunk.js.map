{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["timeout","StyledTableCell","styled","TableCell","StyledSelect","Select","App","React","useState","window","innerWidth","width","setWidth","data","setData","type","setType","search","setSearch","inputRef","useRef","tempData","useMemo","searchArray","split","filter","item","length","i","searchString","_Name","toLowerCase","includes","String","_Abilities13","_UnionAbilityGroupId","setSearchText","text","replace","getImg","target","tagName","children","onMouseEnterImage","ev","img","src","onMouseLeaveImage","onNameClick","innerText","current","value","onAbilityClick","match","onUnionClick","useEffect","addEventListener","Promise","all","fetch","then","r","a","json","crest","textlabel","ability","action","shift","union","Object","keys","forEach","key","_Text","shiftId","_ShiftGroupId","abShift","abShiftKey","parseInt","index","charAt","_Details","_AbilityType1UpValue","variousId","_VariousId1a","_action","actionKey","result","values","count","sort","b","_Id","Container","style","maxWidth","height","padding","Box","component","Paper","display","flexDirection","overflow","flex","Table","stickyHeader","TableHead","TableRow","TableBody","map","paddingTop","paddingBottom","onMouseEnter","onMouseLeave","_BaseId","alt","onClick","borderTop","boxShadow","zIndex","variant","onChange","borderWidth","MenuItem","px","py","InputBase","placeholder","clearTimeout","setTimeout","IconButton","size","Close","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b3a1966.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\nimport styled from 'styled-components';\nimport {\n  Container,\n  Box,\n  Paper,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  InputBase,\n  IconButton,\n  MenuItem,\n  Select\n} from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport {\n  Data,\n  Crest,\n  TextLabel,\n  Ability,\n  Action,\n  Shift,\n  Union\n} from 'utils/type';\n\nvar timeout: number;\n\nconst StyledTableCell = styled(TableCell)`\n  cursor: pointer;\n  transition: all 0.2s;\n  :hover {\n    background: #eee;\n  }\n`;\n\nconst StyledSelect = styled(Select)`\n  fieldset {\n    border-width: 0 1px 0 0;\n    border-radius: 0;\n  }\n  :hover {\n    fieldset {\n      border-color: rgba(0, 0, 0, 0.23) !important;\n    }\n  }\n`;\n\nexport default function App() {\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [data, setData] = React.useState<Array<Crest>>([]);\n  const [type, setType] = React.useState(1);\n  const [search, setSearch] = React.useState('');\n  const inputRef = React.useRef<HTMLInputElement>();\n\n  const tempData = React.useMemo(() => {\n    const searchArray = search.split(' ').filter(item => item !== '');\n    if (searchArray.length === 0) return data;\n    return data\n      ? data.filter(item => {\n          for (let i = 0; i < searchArray.length; i++) {\n            const searchString = searchArray[i];\n            if (type === 0 && item._Name.toLowerCase().includes(searchString))\n              return true;\n            if (\n              type === 1 &&\n              String(item._Abilities13).toLowerCase().includes(searchString)\n            )\n              return true;\n            if (\n              type === 2 &&\n              String(item._UnionAbilityGroupId)\n                .toLowerCase()\n                .includes(searchString)\n            )\n              return true;\n          }\n          return false;\n        })\n      : [];\n  }, [type, data, search]);\n\n  const setSearchText = (text: string) => {\n    text = text.toLowerCase();\n    text = text.replace('[', '【');\n    text = text.replace(']', '】');\n    text = text.replace('.', '‧');\n    text = text.replace('+', '＋');\n    text = text.replace('%', '％');\n    setSearch(text);\n  };\n\n  const onSelectChange = (\n    ev: ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setType(ev.target.value as number);\n  };\n\n  const onInputChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const { value } = ev.target;\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      setSearchText(value);\n    }, 500);\n  };\n\n  const handleClear = () => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n    setSearchText('');\n  };\n\n  const getImg = (target: any) => {\n    let img;\n    if (target.tagName === 'TD') {\n      img = target.children[0];\n    } else {\n      img = target;\n    }\n    return img;\n  };\n\n  const onMouseEnterImage = (ev: any) => {\n    let img = getImg(ev.target);\n    img.src = img.src.replace('_02', '_01');\n  };\n\n  const onMouseLeaveImage = (ev: any) => {\n    let img = getImg(ev.target);\n    img.src = img.src.replace('_01', '_02');\n  };\n\n  const onNameClick = (ev: any) => {\n    setType(0);\n    setSearchText(ev.target.innerText);\n    if (inputRef.current) {\n      inputRef.current.value = ev.target.innerText;\n    }\n  };\n\n  const onAbilityClick = (ev: any) => {\n    setType(1);\n    const text =\n      (ev.target.innerText as string).match(\n        /[^【】]+(?=＋|Ⅰ|Ⅱ|Ⅲ|Ⅳ|Ⅴ|Ⅵ|Ⅶ|Ⅷ|Ⅸ|Ⅹ)/\n      )?.[0] ?? '';\n    setSearchText(text);\n    if (inputRef.current) {\n      inputRef.current.value = text;\n    }\n  };\n\n  const onUnionClick = (ev: any) => {\n    setType(2);\n    const text =\n      (ev.target.innerText as string).match(\n        /[^【】]+(?=＋|Ⅰ|Ⅱ|Ⅲ|Ⅳ|Ⅴ|Ⅵ|Ⅶ|Ⅷ|Ⅸ|Ⅹ)/\n      )?.[0] ?? '';\n    setSearchText(text);\n    if (inputRef.current) {\n      inputRef.current.value = text;\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('resize', () => {\n      setWidth(window.innerWidth);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    Promise.all([\n      fetch(`data/AbilityCrest.json`),\n      fetch(`data/TextLabel.json`),\n      fetch(`data/AbilityData.json`),\n      fetch(`data/ActionCondition.json`),\n      fetch(`data/AbilityShiftGroup.json`),\n      fetch(`data/UnionAbility.json`)\n    ]).then(async r => {\n      const crest: Data<Crest> = await r[0].json();\n      const textlabel: Data<TextLabel> = await r[1].json();\n      const ability: Data<Ability> = await r[2].json();\n      const action: Data<Action> = await r[3].json();\n      const shift: Data<Shift> = await r[4].json();\n      const union: Data<Union> = await r[5].json();\n      const greek = 'ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩ';\n      Object.keys(ability).forEach(key => {\n        const item = ability[key];\n        item._Name = textlabel[item._Name]?._Text ?? '';\n        if (item._Name.match(/ability_shift0/)) {\n          const shiftId = item._ShiftGroupId;\n          const abShift = shift[shiftId];\n          for (let abShiftKey of Object.keys(abShift)) {\n            if (\n              abShiftKey.match(/^_Level./) &&\n              (abShift as any)[abShiftKey] === parseInt(key)\n            ) {\n              const index = parseInt(abShiftKey.replace('_Level', '')) - 1;\n              item._Name = item._Name.replace(\n                '{ability_shift0}',\n                greek.charAt(index)\n              );\n              break;\n            }\n          }\n        }\n        if (\n          item._Name.match(/ability_val0/) ||\n          item._Details.match(/ability_val0/)\n        ) {\n          let value = item._AbilityType1UpValue;\n          if (value === 0) {\n            const variousId = item._VariousId1a;\n            const _action = action[variousId];\n            if (!_action) return;\n            for (let actionKey of Object.keys(_action)) {\n              if (\n                actionKey.match(/^_(Rate|Enhanced)./) &&\n                (_action as any)[actionKey] > 0\n              ) {\n                value = (_action as any)[actionKey] * 100;\n                break;\n              }\n            }\n          }\n          item._Name = item._Name.replace('{ability_val0}', String(value));\n        }\n      });\n      const result = Object.values(crest);\n      result.forEach(item => {\n        item._Name = textlabel[item._Name]._Text;\n        item._Abilities13 = ability[item._Abilities13]._Name;\n        if (item._UnionAbilityGroupId === 0) {\n          item._UnionAbilityGroupId = '無';\n        } else {\n          for (let i = 1; i <= 5; i++) {\n            const count = (union[item._UnionAbilityGroupId] as any)[\n              '_CrestGroup1Count' + i\n            ];\n            if (count === 0 || i === 5) {\n              if (count === 0) i--;\n              item._UnionAbilityGroupId =\n                '【' +\n                (union[item._UnionAbilityGroupId] as any)[\n                  '_CrestGroup1Count' + i\n                ] +\n                '】' +\n                ability[\n                  (union[item._UnionAbilityGroupId] as any)['_AbilityId' + i]\n                ]._Name;\n              break;\n            }\n          }\n        }\n      });\n      result.sort((a, b) => b._Id - a._Id);\n      setData(result);\n      return result;\n    });\n  }, []);\n\n  if (!data) return null;\n\n  return (\n    <Container\n      style={{\n        maxWidth: '1024px',\n        height: '100vh',\n        padding: width >= 1024 ? '20px' : '0'\n      }}\n    >\n      <Box\n        component={Paper}\n        height=\"100%\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        overflow=\"hidden\"\n      >\n        <Box flex={1} overflow=\"auto\">\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell width={82}>圖片</TableCell>\n                <TableCell width={248}>名稱</TableCell>\n                {/* <TableCell>ＨＰ</TableCell>\n                <TableCell>攻擊力</TableCell> */}\n                <TableCell width={250}>能力</TableCell>\n                <TableCell>連組</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tempData.map(item => (\n                <TableRow key={item._Id}>\n                  <StyledTableCell\n                    width={82}\n                    height={87}\n                    style={{ paddingTop: '5px', paddingBottom: 0 }}\n                    onMouseEnter={onMouseEnterImage}\n                    onMouseLeave={onMouseLeaveImage}\n                  >\n                    <img\n                      src={`image/${item._BaseId}_02.png`}\n                      alt={String(item._BaseId)}\n                      width=\"80\"\n                      height=\"80\"\n                    ></img>\n                  </StyledTableCell>\n                  <StyledTableCell width={248} onClick={onNameClick}>\n                    {item._Name}\n                  </StyledTableCell>\n                  {/* <TableCell>{item._MaxHp}</TableCell>\n                  <TableCell>{item._MaxAtk}</TableCell> */}\n                  <StyledTableCell width={250} onClick={onAbilityClick}>\n                    {item._Abilities13}\n                  </StyledTableCell>\n                  <StyledTableCell onClick={onUnionClick}>\n                    {item._UnionAbilityGroupId}\n                  </StyledTableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n        <Box\n          display=\"flex\"\n          borderTop=\"1px solid rgba(224, 224, 224, 1)\"\n          boxShadow=\"0 5px 10px #000\"\n          zIndex=\"1000\"\n        >\n          <StyledSelect\n            variant=\"outlined\"\n            value={type}\n            onChange={onSelectChange}\n            style={{ borderWidth: '0 1px 0 0' }}\n          >\n            <MenuItem value={0}>名稱</MenuItem>\n            <MenuItem value={1}>能力</MenuItem>\n            <MenuItem value={2}>連組</MenuItem>\n          </StyledSelect>\n          <Box px={2} py={1} flex={1} display=\"flex\">\n            <InputBase\n              inputRef={inputRef}\n              placeholder=\"搜尋（[].+%會替換成全形，複數條件請用「空白」作分隔）\"\n              onChange={onInputChange}\n              style={{ flex: 1 }}\n            />\n            {inputRef.current && inputRef.current?.value !== '' && (\n              <IconButton size=\"small\" onClick={handleClear}>\n                <Close />\n              </IconButton>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}